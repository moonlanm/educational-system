package edu.hubu.consumer${packageName}.service;

import edu.hubu.commons.model.CommonResult;
import edu.hubu.commons.model.${packageName}.${modelClassName};
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.*;

/**
 * @author moonlan
 * date 2021/2/1 下午4:54
 */
@SuppressWarnings(value = "unused")
@FeignClient(name = "${packageName}-provider-service")
public interface I${modelClassName}Service {

    @GetMapping("/${modelName}/{id}")
    CommonResult selectOne(@PathVariable("id") String id);

    @GetMapping("/${modelName}/all")
    CommonResult selectAll(@RequestParam(value = "orderBy", defaultValue = "${modelName}Id") String orderBy);

    @GetMapping("/${modelName}/")
    CommonResult selectAllPage(
            @RequestParam(value = "currentPage", defaultValue = "1") Integer currentPage,
            @RequestParam(value = "pageSize", defaultValue = "5") Integer pageSize,
            @RequestParam(value = "orderBy", defaultValue = "${modelName}Id") String orderBy
    );

    @PostMapping("/${modelName}/select-like")
    CommonResult selectLikePage(
            @RequestParam(value = "currentPage", defaultValue = "1") Integer currentPage,
            @RequestParam(value = "pageSize", defaultValue = "5") Integer pageSize,
            @RequestParam(value = "orderBy", defaultValue = "${modelName}Id") String orderBy,
            @RequestBody edu.hubu.commons.mybatis.model.${modelClassName} ${modelName}
    );

    @PostMapping("/${modelName}/")
    CommonResult save(@RequestBody ${modelClassName} ${modelName});

    @PutMapping("/${modelName}/{id}")
    CommonResult update(@PathVariable("id") String id, @RequestBody ${modelClassName} ${modelName});

<#if isDeleted == true>
    @DeleteMapping("/${modelName}/{id}")
    CommonResult logicDeleteById(@PathVariable("id") String id);

    @PatchMapping("/${modelName}/{id}")
    CommonResult forbidById(@PathVariable("id") String id);
</#if>

    @DeleteMapping("/${modelName}/delete/{id}")
    CommonResult deleteById(@PathVariable("id") String id);
}
